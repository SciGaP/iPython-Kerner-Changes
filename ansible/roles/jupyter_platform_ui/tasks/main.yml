- name: Install nginx certbot python3-certbot-nginx (Debian)
  apt:
    name:
      - nginx
      - certbot
      - python3-certbot-nginx
    state: latest
  become: yes
  when: ansible_os_family == "Debian"

- name: Install nginx certbot python3-certbot-nginx (RedHat)
  yum:
    name:
      - nginx
      - certbot
      - python3-certbot-nginx
    state: latest
  become: yes
  when: ansible_os_family == "RedHat"

- name: Download NodeJS 16.x (Debian)
  get_url:
    url: https://deb.nodesource.com/setup_16.x
    dest: /tmp
    mode: '0755'
    force: true
  when: ansible_os_family == "Debian"

- name: Download NodeJS 16.x (RedHat)
  get_url:
    url: https://rpm.nodesource.com/setup_16.x
    dest: /tmp
    mode: '0755'
    force: true
  when: ansible_os_family == "RedHat"

- name: Install NodeJS 16.x
  command: "bash /tmp/setup_16.x"
  become: yes

- name: Install nodejs (Debian)
  command: "apt-get install -y nodejs"
  become: yes
  when: ansible_os_family == "Debian"

- name: Install nodejs (RedHat)
  command: "yum install -y nodejs"
  become: yes
  when: ansible_os_family == "RedHat"


- name: Install yarn
  command: "npm install yarn -g"
  become: yes

- name: Update the default nginx
  template:
    dest: /etc/nginx/sites-enabled/default
    src: nginx/default.j2
    force: yes
    mode: 0755
  become: yes

- name: Create Jupyter Platform UI source directory
  become: yes
  file: path={{ jupyter_platform_ui_source_dir }}
    state=directory
    mode=0755
    owner={{ user }}
    group={{ group }}

- name: git checkout from Jupyter Platform UI github repo {{ jupyter_platform_ui_repo }} branch {{ jupyter_platform_ui_git_branch }}
  git: repo="{{ jupyter_platform_ui_repo }}"
    dest="{{ jupyter_platform_ui_source_dir }}"
    version="{{ jupyter_platform_ui_git_branch }}"
  register: checkout
  tags: update
  become: yes
  become_user: "{{ user }}"

- name: Run Jupyter Platform UI yarn install
  command: "yarn install chdir={{jupyter_platform_ui_source_dir}}/jupyter-platform/platform-ui"
  become: yes
  become_user: "{{ user }}"

- name: Run Jupyter Platform UI yarn build
  command: "yarn build chdir={{jupyter_platform_ui_source_dir}}/jupyter-platform/platform-ui"
  environment:
    REACT_APP_JUPYTER_PLATFORM_API_PROTOCOL: "{{jupyter_platform_api_protocol}}"
    REACT_APP_JUPYTER_PLATFORM_API_HOST: "{{jupyter_platform_api_host}}"
    REACT_APP_JUPYTER_PLATFORM_API_PORT: "{{jupyter_platform_api_port}}"
    REACT_APP_CLIENT_ID: "{{ jupyter_platform_ui_client_id }}"
    REACT_APP_CLIENT_SEC: "{{ jupyter_platform_ui_client_sec }}"
    REACT_APP_REDIRECT_URI: "{{ jupyter_platform_ui_client_redirect_uri }}"
    REACT_APP_CUSTOS_API_URL: "{{ jupyter_platform_ui_custos_api_url }}"
  become: yes
  become_user: "{{ user }}"

- name: Copy build files
  command: "sudo cp -a ./build/. /var/www/html chdir={{jupyter_platform_ui_source_dir}}/jupyter-platform/platform-ui"
  become: yes
  become_user: "{{ user }}"

- name: open firewall port 80 for HTTP connections
  firewalld: port="80/tcp"
    zone=public permanent=true state=enabled immediate=yes
  become: yes

- name: open firewall port 443 for HTTPS connections
  firewalld: port="443/tcp"
    zone=public permanent=true state=enabled immediate=yes
  become: yes